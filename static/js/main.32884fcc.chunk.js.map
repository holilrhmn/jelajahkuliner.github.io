{"version":3,"sources":["assets/image/logo.png","assets/image/jelajah-01.png","components/Navbar.js","components/Footer/Footer.js","components/Images.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","src","logo","height","Footer","href","Images","style","marginBottom","mainImage","width","alt","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchHandler","state","url","Axios","get","headers","params","q","crossDomain","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeatureCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","getCityData","city_id","newCriteria","push","getCategoriesData","transformCategoriesData","filter","addToCriteriaHandler","splice","restaurants","entity_id","entity_type","renderRestaurantList","match","RestaurantProfile","class","featured_image","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","axios","res_id","getReviewsData","reviews","user_reviews","App","path","exact","component","RestaurantDetails","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.32884fcc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f96e0f2d.png\";","module.exports = __webpack_public_path__ + \"static/media/jelajah-01.cd24ce3c.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport logo from \"../assets/image/logo.png\";\r\n\r\nconst Navbar= () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n       <Link className=\"navbar-brand\" to=\"/\"> <img src ={logo} height=\"50px\"></img></Link>\r\n      </nav>\r\n);\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer primary\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-sm-4 text-center\">\r\n                <h5>About Jelajah Kuliner</h5>\r\n                <ul>\r\n                <li><a href=\"/#\">About Us</a></li>\r\n                <li><a href=\"/#\">Contact Us</a></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-sm-4 text-center\">\r\n                <h5>Support</h5>\r\n                <ul>\r\n                <li><a href=\"/#\">FAQ</a></li>\r\n                <li><a href=\"/#\">Help desk</a></li>\r\n                <li><a href=\"/#\">Forums</a></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"col-sm-4 text-center\">\r\n                <h5>Download App</h5>\r\n                <ul>\r\n                <li><a href=\"/#\">Google Play</a></li>\r\n                <li><a href=\"/#\">App Store</a></li>\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"social-networks\">\r\n            <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\r\n            <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\r\n            <a href=\"/#\" className=\"instagram\"><i className=\"fa fa-instagram\"></i></a>\r\n        </div>\r\n        <div className=\"text-center\">\r\n            <p className=\"footer-copyright\">Copyright &copy; 2019 Jelajah Kuliner </p>\r\n        </div>\r\n    </footer>\r\n\r\n)\r\n\r\nexport default Footer","import React from 'react';\r\nimport mainImage from \"../assets/image/jelajah-01.png\";\r\n\r\nconst Images = () => (\r\n   <> \r\n        <div className=\"container-fluid\">\r\n        <div className=\"row\" style={{ marginBottom: 30 }}>\r\n            <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\" ></img>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"card text-white bg-success mb-3 text-center\">\r\n                    <div className=\"card-header\"><h1>Welcome to Jelajah Kuliner</h1></div>\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\r\n                        <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\r\n                        <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</>\r\n);\r\n\r\nexport default Images;","import React from 'react';\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst CityCard = (props) => (\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg light mb-3\">\r\n          <div className=\"card-body\">\r\n             <h3 className=\"card-title\">{props.city.name}</h3>\r\n             <p>{props.city.country_name}</p>\r\n             <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurants in {props.city.name}</Link>\r\n           </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CityCard;","import React from 'react'\r\nimport CityCard from './CityCard'\r\n\r\nconst CityList = (props) => (\r\n  <>\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <h3>{props.title}</h3>\r\n        { props.showSubtitle === true && props.subtitle !== '' && \r\n          <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}' </h6>\r\n        }\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n\r\n      { props.cities == null ? (\r\n        <div className=\"col\">\r\n          <p>Loading . . . </p>\r\n        </div>\r\n      ) : (\r\n        _renderCityList(props.cities)\r\n      )}\r\n\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst _renderCityList = (cities) => {\r\n  if(cities.length > 0) {\r\n    return (\r\n      cities.map(city =>\r\n        <CityCard key={city.id} city={city} />\r\n      )\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"col\">\r\n        <p className=\"text-danger\">Data not found !</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CityList","import React from 'react';\r\n\r\nconst SearchCity = (props) => (\r\n\r\n    <div className=\"row\" style={{ marginBottom: 30 }}>\r\n          <div className=\"col\">\r\n          <h3>Search City</h3>\r\n          <div className=\"card\">\r\n              <div className=\"card-body\">\r\n              <div className=\"form-row\">\r\n                  <div className=\"col-11\">\r\n                  <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Type keyword or city name\"\r\n                      value={props.value}\r\n                      onChange={props.onChange}\r\n                  />\r\n                  </div>\r\n                  <div className=\"col-1\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                  onClick={props.onClickSearch}\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n              </div>\r\n              </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n);\r\n\r\nexport default SearchCity","\r\nexport const API = {\r\n    zomato: {\r\n      baseUrl: 'https://developers.zomato.com/api/v2.1',\r\n      api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport Images from\"../components/Images\";\r\nimport CityList from '../components/CityList';\r\nimport SearchCity from '../components/SearchCity';\r\nimport Axios from 'axios';\r\nimport { API } from '../config/api';\r\n\r\nclass Home extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            featuredCities : null,\r\n            keyword : \"\",\r\n            citiesResultSearch: null,\r\n            cityKeywordSearch:'',\r\n        };\r\n      }\r\n\r\n      changeKeywordHandler = event => {\r\n        this.setState({ keyword: event.target.value});\r\n      };\r\n      searchHandler = () => {\r\n          let keyword = this.state.keyword;\r\n          var url = `${API.zomato.baseUrl}/cities`\r\n          Axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n              params: {\r\n                  q :keyword\r\n              },\r\n              crossDomain: true\r\n          }).then(({ data }) => {\r\n            if (data.status === 'success') {\r\n                this.setState({ citiesResultSearch: data.location_suggestions, keyword: '' , cityKeywordSearch: keyword})\r\n            }\r\n          })\r\n          .catch(err => console.log(err))\r\n      }\r\n\r\n     getFeatureCities = () =>{\r\n        var url = `${API.zomato.baseUrl}/cities`\r\n         Axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params : {\r\n                city_ids: \"74,11052,170\"\r\n            } \r\n         })\r\n         .then(({data}) => {\r\n            if (data.status === \"success\") { \r\n                this.setState( {featuredCities:data.location_suggestions} )\r\n            }\r\n         }).catch(err=> console.log(err));\r\n     };\r\n     componentDidMount(){\r\n         this.getFeatureCities();\r\n     }\r\n      render() {\r\n        const citiesDummy =[\r\n            { id: 74, name: \"Jakarta\", country_name: \"Indonesia\"},\r\n            { id: 11052, name: \"Bandung\", country_name: \"Indonesia\"},\r\n            { id: 170, name: \"Bali\", country_name: \"Indonesia\"},\r\n          ];\r\n        return (\r\n        <>\r\n            <Images></Images>\r\n            <div className=\"container\" style={{ marginTop:30, marginBottom: 30 }}>\r\n                <CityList title={'Featured Cities'} cities={this.state.featuredCities} />\r\n\r\n                <SearchCity \r\n                value={this.state.keyword}\r\n                onChange={this.changeKeywordHandler}\r\n                onClickSearch={this.searchHandler}\r\n                />\r\n\r\n                {\r\n                    this.state.cityKeywordSearch !== '' && (\r\n                    <CityList\r\n                        title={'Search Result'}\r\n                        showSubtitle={true}\r\n                        subtitle={this.state.cityKeywordSearch}\r\n                        cities={this.state.citiesResultSearch}\r\n                    />  \r\n                )}\r\n                \r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n        <div className=\"list-group\">\r\n        {props.categories.map(category => (\r\n            <button\r\n                key={category.id}\r\n                className={'list-group-item list-group-item-action active' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}\r\n                onClick={()=> props.categoryClickHandler(category)}\r\n            >\r\n            {category.name}\r\n            </button>\r\n        ))}\r\n        </div>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    )\r\n)\r\n\r\nexport default CategoryList;","import React from 'react'\r\n\r\nconst SearchKeyword = (props) => (\r\n    <>\r\n    <h5>Keyword</h5>\r\n    <div className=\"card\">\r\n        <div className=\"card-body\">\r\n        <div className=\"form-row\">\r\n            <div className=\"col-10\">\r\n            <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\r\n                value={props.keyword}\r\n                onChange={props.changeKeywordHandler}\r\n            />\r\n            </div>\r\n            <div className=\"col\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={props.onClickAddToCriteria}\r\n            >\r\n                Add to criteria\r\n            </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n)\r\n\r\nexport default SearchKeyword","import React from 'react'\r\n\r\n\r\nconst SearchCriteria = (props) => (\r\n    <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\r\n    <div className=\"card-body\">\r\n        <p className=\"card-title\">Find Restaurants based on criteria : </p>\r\n        <table className=\"table table-hover\">\r\n            <tbody>\r\n            {props.criteria.map((cri, index) => (\r\n                    <tr key={index} className=\"table-active\">\r\n                    <td width=\"40%\">{cri.criteriaName}</td>\r\n                    <td width=\"50%\">{cri.data.name}</td>\r\n                    <td>\r\n                      {cri.criteriaName !== 'City' && (\r\n                        <i\r\n                            className=\"fa fa-times\"\r\n                            aria-hidden=\"true\"\r\n                            style={{ color: 'red' }}\r\n                             onClick={() => props.removeCriteriaHandler(index)}\r\n                        >\r\n                        </i>\r\n                         )}\r\n                    </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n        <div className=\"pull-right\">\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={props.onClickSearch}\r\n            >\r\n                Search\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n)\r\n\r\nexport default SearchCriteria","import React from 'react'\r\n\r\nconst RatingLabel = (props) => (\r\n    <div className=\"btn btn-sm\"\r\n        style={{\r\n        color: 'white',\r\n        backgroundColor: `#${props.labelColor}`,\r\n        borderColor: `#${props.labelColor}`,\r\n        }}\r\n    >\r\n        { props.text }\r\n    </div>\r\n)\r\n\r\nexport default RatingLabel","import React from 'react'\r\nimport { Link } from 'react-router-dom' \r\nimport RatingLabel from '../components/RatingLabel'\r\n\r\nconst RestaurantCard = (props) => (\r\n    <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n    <div className=\"card\">\r\n        <div className=\"card-header\">\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">\r\n            <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\r\n            </div>\r\n            <div className=\"col-9\">\r\n            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n            <h6>{props.restaurant.location.locality}</h6>\r\n            <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n        <table className=\"table\">\r\n            <tbody>\r\n            <tr>\r\n                <td>Rating</td>\r\n                <td>\r\n                    <RatingLabel   \r\n                        labelColor={props.restaurant.user_rating.rating_color}\r\n                        text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \r\n                    />\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>Cuisines</td>\r\n                <td>\r\n                {props.restaurant.cuisines}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>Cost for two</td>\r\n                <td>\r\n                {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                </td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        </div>\r\n        <div className=\"card-footer\">\r\n        <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n            <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n            View Restaurant Details\r\n            </button>\r\n        </Link>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n)\r\n\r\nexport default RestaurantCard;","import React, { Component } from 'react'\r\nimport { API } from '../config/api'\r\nimport Axios from 'axios';\r\nimport CategoryList from '../components/CategoryList';\r\nimport SearchKeyword from '../components/SearchKeyword';\r\nimport SearchCriteria from '../components/SearchCriteria';\r\nimport RestaurantCard from '../components/RestaurantCard'\r\n\r\nclass City extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            categorySelected: null,\r\n            keyword: '',\r\n            criteria: [],\r\n            restaurants: []\r\n        }\r\n    }\r\n\r\n    transformCategoriesData(categories) {\r\n        let categoriesTransformed = categories.map(category => { \r\n          return category.categories\r\n        })\r\n    \r\n        return categoriesTransformed\r\n    }\r\n\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`\r\n        Axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            city_ids: `${city_id}`\r\n          }\r\n        })\r\n          .then(({ data }) => {\r\n            let city = data.location_suggestions[0]\r\n            let newCriteria = {\r\n              criteriaName: 'City',\r\n              data: city\r\n            }\r\n            let criteria = [...this.state.criteria]\r\n              criteria.push(newCriteria)\r\n              this.setState({ city, criteria })\r\n          })\r\n          .catch(err => console.log(err))\r\n      };\r\n\r\n      getCategoriesData = () => {\r\n        let url = `${API.zomato.baseUrl}/categories`\r\n        Axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          }\r\n        })\r\n          .then(({ data }) => {\r\n            // proses transform data categories\r\n            let categories = this.transformCategoriesData(data.categories)\r\n            this.setState({ categories })\r\n          })\r\n          .catch(err => console.log(err))\r\n      };\r\n\r\n      componentDidMount () {\r\n        // cara mendapatkan parameter city_id dari url / route\r\n        let { city_id } = this.props.match.params\r\n        this.getCityData(city_id)\r\n        // proses transform data categories\r\n  \r\n        this.getCategoriesData()\r\n      }\r\n        categoryClickHandler = category => {\r\n          let criteria = [...this.state.criteria]\r\n          criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\r\n          let newCriteria = {\r\n            criteriaName: 'Category',\r\n            data: category\r\n          }\r\n          criteria.push(newCriteria)\r\n          this.setState({ categorySelected: category, criteria })\r\n        }\r\n        changeKeywordHandler = (event) => {\r\n            this.setState({ keyword: event.target.value });\r\n        }\r\n\r\n        addToCriteriaHandler = () => {\r\n          let criteria = [...this.state.criteria]\r\n          criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\r\n          let newCriteria = {\r\n            criteriaName  : 'Keyword',\r\n            data          : {\r\n              name: this.state.keyword\r\n            }\r\n          }\r\n      \r\n          criteria.push(newCriteria)\r\n          this.setState({ keyword: '', criteria })\r\n        }\r\n\r\n        removeCriteriaHandler = (index) => {\r\n          let criteria = [...this.state.criteria]\r\n          criteria.splice(index, 1)\r\n          this.setState({ criteria })\r\n        }\r\n\r\n        searchHandler = () => {\r\n          this.setState({restaurants: null})\r\n          let url = `${API.zomato.baseUrl}/search`\r\n          let params = {}\r\n      \r\n          for (let  cri of this.state.criteria) {\r\n      \r\n            switch (cri.criteriaName) {\r\n              case 'City' : \r\n                params.entity_id    = cri.data.id\r\n                params.entity_type  = 'city'\r\n                break\r\n              case 'Category' : \r\n                params.category     = cri.data.id\r\n                break\r\n              case 'Keyword' : \r\n                params.q            = cri.data.name\r\n                break\r\n              default : break\r\n            }\r\n      \r\n          }\r\n      \r\n          Axios.get(url, {\r\n            headers: {\r\n              'user-key': API.zomato.api_key\r\n            },\r\n            params\r\n          })\r\n            .then(({ data }) => {\r\n              this.setState({ restaurants : data.restaurants })\r\n            })\r\n            .catch(err => console.log(err))\r\n        };\r\n\r\n        renderRestaurantList = () => {\r\n          if(this.state.restaurants == null) {\r\n            return (\r\n              <div className=\"col\">\r\n                <p>Loading...</p> \r\n              </div>\r\n            )\r\n          }\r\n      \r\n          if(this.state.restaurants.length > 0) {\r\n            return (\r\n              this.state.restaurants.map(({ restaurant }) => (\r\n                <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n              ))\r\n            )\r\n          } else {\r\n            return (\r\n              <div className=\"col\">\r\n                <p>No Data available. Please select criteria, and click Search</p>\r\n              </div>\r\n            )\r\n          }\r\n        };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n\r\n                { this.state.city && (\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4 className=\"text-success\">\r\n                            Restaurant in { this.state.city.name }, { this.state.city.country_name }\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                    <h5>Categories</h5>\r\n                    <CategoryList \r\n                        categories={this.state.categories}\r\n                        categorySelected={this.state.categorySelected}\r\n                        categoryClickHandler={(category) => this.categoryClickHandler(category)}\r\n                    />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <SearchKeyword\r\n                        keyword={this.state.keyword}\r\n                        changeKeywordHandler={this.changeKeywordHandler}\r\n                        onClickAddToCriteria={this.addToCriteriaHandler}\r\n                        />\r\n                        <SearchCriteria \r\n                            criteria={this.state.criteria}\r\n                            removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\r\n                            onClickSearch={this.searchHandler}\r\n                        />\r\n                        <div className=\"row\">\r\n                          <div className=\"col\" style={{ marginBottom: 10 }}>\r\n                              <h4 className=\"text-success\">Restaurant List</h4>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        {\r\n                           this.renderRestaurantList() \r\n\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default City","import React from 'react'\r\nimport RatingLabel from './RatingLabel'\r\n\r\nconst RestaurantProfile = (props) => (\r\n    <div className=\"card\">\r\n    <div className=\"card-header\">\r\n        <div className=\"row\">\r\n        <div className=\"col\">\r\n        {\r\n        props.restaurant ? (\r\n            <>\r\n            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n            <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\r\n            <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n            </>\r\n        ) : (\r\n            <p>Loading...</p>\r\n        )\r\n        }\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"card-body\">\r\n    {\r\n        props.restaurant ? (\r\n            <div className=\"row\">\r\n            <div className=\"col-6\">\r\n                <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <table className=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                    <td>Rating</td>\r\n                    <td>\r\n                      <RatingLabel\r\n                          labelColor={props.restaurant.user_rating.rating_color}\r\n                          text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                          \r\n                      />\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Cuisines</td>\r\n                    <td>\r\n                        {props.restaurant.cuisines}\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                    <td>Cost for two</td>\r\n                    <td>\r\n                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        ) : (\r\n            <p>Loading...</p>\r\n        )\r\n        }\r\n\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport default RestaurantProfile","import React from 'react'\r\nimport RatingLabel from '../components/RatingLabel'\r\n\r\nconst Review = (props) => (\r\n    <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n      <div className=\"card-body\">\r\n        <div className=\"row\" style={{ marginBottom: 20 }}>\r\n          <div className=\"col-1\" style={{ border: '0px solid black' }}>\r\n            <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\r\n          </div>\r\n          <div className=\"col-11\" style={{ border: '0px solid black' }}>\r\n            <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n            <RatingLabel\r\n              text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n              labelColor={`${props.review.user.foodie_color}`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n        <RatingLabel\r\n          text={`${props.review.rating} (${props.review.rating_text})`}\r\n          labelColor={`${props.review.rating_color}`}\r\n        />\r\n        <p className=\"card-text\">{props.review.review_text}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n  \r\n  export default Review","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { API } from '../config/api'\r\nimport RestaurantProfile from '../components/RestaurantProfile'\r\nimport Review from '../components/Review'\r\n\r\n\r\nclass RestaurantDetail extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n          restaurant: null,\r\n          reviews: null\r\n        }\r\n    }\r\n    getRestaurantData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/restaurant`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            res_id: restaurant_id\r\n          }\r\n        })\r\n          .then(({ data }) => {\r\n            this.setState({ restaurant: data })\r\n          })\r\n          .catch(err => console.log(err))\r\n      }\r\n\r\n      getReviewsData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/reviews`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            res_id: restaurant_id\r\n          }\r\n        })\r\n          .then(({ data }) => {\r\n            this.setState({ reviews: data.user_reviews })\r\n          })\r\n          .catch(err => console.log(err))\r\n    }\r\n\r\n      componentDidMount () {\r\n        let { params } = this.props.match\r\n        this.getRestaurantData(params.restaurant_id)\r\n        this.getReviewsData(params.restaurant_id)\r\n      }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                  <RestaurantProfile restaurant={this.state.restaurant}/>\r\n                </div>\r\n                <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                    <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\r\n                    { \r\n                    this.state.reviews ? (\r\n                          this.state.reviews.map(({ review }) => (\r\n                          <Review key={review.id} review={review} />\r\n                        ))\r\n                      ) : (\r\n                          <p>Loading...</p>\r\n                      )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RestaurantDetail","import React, { Component } from 'react';\nimport Navbar from\"./components/Navbar\";\nimport Footer from './components/Footer/Footer';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport City from './pages/City';\nimport RestaurantDetails from './pages/RestaurantDetails';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City}></Route>\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetails}></Route>\n        <Footer />\n      </Router>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nrequire('dotenv').config();\n"],"sourceRoot":""}